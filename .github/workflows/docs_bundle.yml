name: Process Documentation on PR

on:
    pull_request: # 触发器为 pull_request
        types: [opened, synchronize, reopened] # 当 PR 打开、有新提交或重新打开时触发
                                             # 移除了 paths 过滤器
    workflow_dispatch: # 保留手动触发

jobs:
    process-docs-in-pr:
        runs-on: ubuntu-latest
        permissions:
            contents: write # 允许 GITHUB_TOKEN 提交到 PR 分支

        steps:
            - name: Checkout PR branch
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.head_ref }} # 检出 PR 的源分支

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pyyaml

            - name: Run documentation tools
              id: doc-tools
              run: python tools/main_docs_bundle.py

            - name: Display results
              run: |
                  echo "Execution results:"
                  echo "Successful operations: ${{ steps.doc-tools.outputs.success_count }}"
                  echo "Failed operations: ${{ steps.doc-tools.outputs.error_count }}"
                  if [ "${{ steps.doc-tools.outputs.detailed_message }}" != "" ]; then
                    echo "Details:"
                    echo "${{ steps.doc-tools.outputs.detailed_message }}"
                  fi

            - name: Commit and Push Documentation Changes
              if: always()
              env:
                  GIT_COMMITTER_NAME: github-actions[bot]
                  GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
                  GIT_AUTHOR_NAME: ${{ steps.doc-tools.outputs.commit_author_name || 'Documentation Bot' }}
                  GIT_AUTHOR_EMAIL: ${{ steps.doc-tools.outputs.commit_author_email || 'docs-bot@example.com' }}
              run: |
                  if [[ -z "$(git status --porcelain)" ]]; then
                    echo "No file changes from script, skipping commit."
                    exit 0
                  fi
                  
                  git config --local user.email "${GIT_AUTHOR_EMAIL}"
                  git config --local user.name "${GIT_AUTHOR_NAME}"
                  git config --local committer.email "${GIT_COMMITTER_EMAIL}"
                  git config --local committer.name "${GIT_COMMITTER_NAME}"

                  FINAL_COMMIT_SUBJECT=""
                  if [[ -n "${{ steps.doc-tools.outputs.commit_message }}" ]]; then
                    FINAL_COMMIT_SUBJECT="${{ steps.doc-tools.outputs.commit_message }}"
                  else
                    FINAL_COMMIT_SUBJECT="Docs: Automated updates by PR Action"
                  fi
                  
                  FINAL_COMMIT_BODY=""
                  if [[ -n "${{ steps.doc-tools.outputs.detailed_message }}" ]]; then
                    FINAL_COMMIT_BODY="${{ steps.doc-tools.outputs.detailed_message }}"
                  else
                    FINAL_COMMIT_BODY="Changes made by the documentation processing script."
                  fi

                  git add .
                  echo "Committing changes with subject: $FINAL_COMMIT_SUBJECT"
                  git commit -m "$FINAL_COMMIT_SUBJECT" -m "$FINAL_COMMIT_BODY"
                  
                  echo "Pushing changes to branch ${{ github.head_ref }}"
                  git push origin HEAD:${{ github.head_ref }}
                  
                  echo "Changes pushed to PR branch."