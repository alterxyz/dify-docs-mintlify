name: Process Documentation

on:
    pull_request:
        types: [opened, synchronize]
        branches: [main]
    workflow_dispatch:

jobs:
    process-docs:
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  # For pull_request, check out the PR's head SHA.
                  # For workflow_dispatch, check out the branch selected (github.ref).
                  ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.ref }}

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pyyaml

            - name: Run documentation tools
              id: doc-tools
              run: python tools/main_docs_bundle.py

            - name: Display results
              run: |
                  echo "Execution results:"
                  echo "Successful operations: ${{ steps.doc-tools.outputs.success_count }}"
                  echo "Failed operations: ${{ steps.doc-tools.outputs.error_count }}"
                  if [ "${{ steps.doc-tools.outputs.detailed_message }}" != "" ]; then
                    echo "Details:"
                    echo "${{ steps.doc-tools.outputs.detailed_message }}"
                  fi

            - name: Check for file changes
              id: git_status_check
              run: |
                  if [[ -n "$(git status --porcelain)" ]]; then
                    echo "changes_exist=true" >> $GITHUB_OUTPUT
                  else
                    echo "changes_exist=false" >> $GITHUB_OUTPUT
                  fi

            - name: Commit and Push to PR branch or current branch
              if: steps.git_status_check.outputs.changes_exist == 'true' && ((github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) || github.event_name == 'workflow_dispatch')
              run: |
                  FINAL_COMMIT_SUBJECT=""
                  if [[ -n "${{ steps.doc-tools.outputs.commit_message }}" ]]; then
                    FINAL_COMMIT_SUBJECT="${{ steps.doc-tools.outputs.commit_message }}"
                  else
                    FINAL_COMMIT_SUBJECT="Docs: Automated documentation updates by CI"
                  fi
                  
                  FINAL_COMMIT_BODY=""
                  if [[ -n "${{ steps.doc-tools.outputs.detailed_message }}" ]]; then
                    FINAL_COMMIT_BODY="${{ steps.doc-tools.outputs.detailed_message }}"
                  else
                    FINAL_COMMIT_BODY="No detailed information provided by the script."
                  fi
                  
                  git config --local user.email "88554920+alterxyz@users.noreply.github.com"
                  git config --local user.name "alterxyz"
                  git add .
                  git commit -m "$FINAL_COMMIT_SUBJECT" -m "$FINAL_COMMIT_BODY"
                  
                  BRANCH_TO_PUSH_TO=""
                  # For pull_request, push to the PR's source branch (github.head_ref)
                  if [[ "${{ github.event_name }}" == "pull_request" ]]; then
                    BRANCH_TO_PUSH_TO="${{ github.head_ref }}"
                  # For workflow_dispatch, push to the branch the workflow was run on (github.ref_name)
                  elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                    BRANCH_TO_PUSH_TO="${{ github.ref_name }}"
                  fi

                  if [[ -n "$BRANCH_TO_PUSH_TO" ]]; then
                    # We checked out a specific SHA, so HEAD is detached.
                    # Pushing HEAD to the named branch updates that branch to this new commit.
                    git push origin HEAD:"$BRANCH_TO_PUSH_TO"
                    echo "Changes committed and pushed to branch $BRANCH_TO_PUSH_TO with subject: $FINAL_COMMIT_SUBJECT"
                  else
                    echo "Error: Could not determine branch to push to for event ${{ github.event_name }}."
                    # This case should ideally not be reached if the 'if' condition for the step is correct.
                    exit 1
                  fi

            - name: Report no changes or fork PR
              if: steps.git_status_check.outputs.changes_exist == 'false' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == true && steps.git_status_check.outputs.changes_exist == 'true')
              run: |
                  if [[ "${{ steps.git_status_check.outputs.changes_exist }}" == "false" ]]; then
                    echo "No file changes detected by the script, skipping commit."
                  elif [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.head.repo.fork }}" == "true" && "${{ steps.git_status_check.outputs.changes_exist }}" == "true" ]]; then
                    echo "Changes detected on a PR from a fork. No auto-commit to the fork branch will be performed."
                    echo "These changes will be handled by the merge process or subsequent actions on main."
                  fi