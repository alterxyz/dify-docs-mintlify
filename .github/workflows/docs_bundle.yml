name: Process Documentation

on:
    pull_request:
        types: [opened, synchronize, reopened]
        branches: [main]
    workflow_dispatch:

jobs:
    process-docs:
        runs-on: ubuntu-latest
        permissions:
            contents: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pyyaml

            - name: Run documentation tools
              id: doc-tools
              run: python tools/main_docs_bundle.py

            - name: Display results
              run: |
                  echo "Execution results:"
                  echo "Successful operations: ${{ steps.doc-tools.outputs.success_count }}"
                  echo "Failed operations: ${{ steps.doc-tools.outputs.error_count }}"
                  if [ "${{ steps.doc-tools.outputs.detailed_message }}" != "" ]; then
                    echo "Details:"
                    echo "${{ steps.doc-tools.outputs.detailed_message }}"
                  fi

            - name: Check for file changes
              id: git_status_check
              run: |
                  if [[ -n "$(git status --porcelain)" ]]; then
                    echo "changes_exist=true" >> $GITHUB_OUTPUT
                  else
                    echo "changes_exist=false" >> $GITHUB_OUTPUT
                  fi

            - name: Commit and Push to Source Branch
              if: >-
                steps.git_status_check.outputs.changes_exist == 'true' &&
                (
                  (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) ||
                  (github.event_name == 'workflow_dispatch')
                )
              env:
                  GIT_COMMITTER_NAME: github-actions[bot]
                  GIT_COMMITTER_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
                  GIT_AUTHOR_NAME: ${{ steps.doc-tools.outputs.commit_author_name || 'alterxyz-actions-bot' }}
                  GIT_AUTHOR_EMAIL: ${{ steps.doc-tools.outputs.commit_author_email || '88554920+alterxyz@users.noreply.github.com' }}
              run: |
                  git config --local user.email "${GIT_AUTHOR_EMAIL}"
                  git config --local user.name "${GIT_AUTHOR_NAME}"
                  git config --local committer.email "${GIT_COMMITTER_EMAIL}"
                  git config --local committer.name "${GIT_COMMITTER_NAME}"
                  
                  FINAL_COMMIT_SUBJECT=""
                  if [[ -n "${{ steps.doc-tools.outputs.commit_message }}" ]]; then
                    FINAL_COMMIT_SUBJECT="${{ steps.doc-tools.outputs.commit_message }}"
                  else
                    FINAL_COMMIT_SUBJECT="Docs: Automated updates by CI"
                  fi
                  
                  FINAL_COMMIT_BODY=""
                  if [[ -n "${{ steps.doc-tools.outputs.detailed_message }}" ]]; then
                    FINAL_COMMIT_BODY="${{ steps.doc-tools.outputs.detailed_message }}"
                  else
                    FINAL_COMMIT_BODY="Automated changes by documentation processing script."
                  fi
                  
                  git add .
                  git commit -m "$FINAL_COMMIT_SUBJECT" -m "$FINAL_COMMIT_BODY"
                  
                  BRANCH_TO_PUSH=""
                  if [[ "${{ github.event_name }}" == "pull_request" ]]; then
                    BRANCH_TO_PUSH="${{ github.head_ref }}"
                  elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
                    BRANCH_TO_PUSH="${{ github.ref_name }}"
                  fi

                  if [[ -n "$BRANCH_TO_PUSH" ]]; then
                    git push origin HEAD:"$BRANCH_TO_PUSH"
                    echo "Changes committed and pushed to branch $BRANCH_TO_PUSH"
                  else
                    echo "Error: Could not determine branch to push to for event ${{ github.event_name }}."
                    exit 1
                  fi

            - name: Report status (no changes or fork PR)
              if: >-
                steps.git_status_check.outputs.changes_exist == 'false' ||
                (github.event_name == 'pull_request' && 
                github.event.pull_request.head.repo.fork == true && 
                steps.git_status_check.outputs.changes_exist == 'true')
              run: |
                  if [[ "${{ steps.git_status_check.outputs.changes_exist }}" == "false" ]]; then
                    echo "No file changes detected by the script, skipping commit."
                  elif [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.head.repo.fork }}" == "true" && "${{ steps.git_status_check.outputs.changes_exist }}" == "true" ]]; then
                    echo "Changes detected on a PR from a fork. No auto-commit to the fork branch will be performed by this workflow."
                    echo "These changes will be handled by the merge process or subsequent actions on the main branch."
                  fi